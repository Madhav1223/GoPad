name: Go Build for GUI Platforms

on:
  push:
    branches:
      - "main"
      - "gitActionTest"

jobs:
  build:
    name: Build for ${{ matrix.goos }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            runner: ubuntu-latest
            ext: ""
          - goos: windows
            goarch: amd64
            runner: windows-latest
            ext: .exe
          - goos: darwin
            goarch: amd64
            runner: macos-latest
            ext: ""

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.22.2"

      - name: Install system deps (Linux only)
        if: matrix.goos == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgl1-mesa-dev \
            libx11-dev \
            libxi-dev \
            libxcursor-dev \
            libxrandr-dev \
            libxinerama-dev \
            libxxf86vm-dev \
            libxext-dev \
            libxfixes-dev \
            pkg-config

      - name: Tidy modules
        run: go mod tidy

      - name: Build binary for Linux
        if: matrix.goos == 'linux'
        run: |
          mkdir -p builds
          GOOS=linux GOARCH=amd64 go build -o builds/myproject-linux-amd64 ./cmd/gopad

      - name: Build binary for Windows
        if: matrix.goos == 'windows'
        run: |
          mkdir -p builds
          GOOS=windows GOARCH=amd64 go build -o builds/myproject-windows-amd64.exe ./cmd/gopad

      - name: Build binary for macOS
        if: matrix.goos == 'darwin'
        run: |
          mkdir -p builds
          GOOS=darwin GOARCH=amd64 go build -o builds/myproject-darwin-amd64 ./cmd/gopad

      - name: Upload artifact
        uses: softprops/action-gh-release@v2
        with:
          files: builds/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
